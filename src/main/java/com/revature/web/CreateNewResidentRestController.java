package com.revature.web;

import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.revature.beans.Employee;
import com.revature.service.EmployeeService;
import com.sun.mail.smtp.SMTPMessage;

@RestController
@RequestMapping("/createNewResidentRest")
public class CreateNewResidentRestController {
	
	@Autowired
	private EmployeeService employeeService;

	@RequestMapping(method=RequestMethod.POST)
	public @ResponseBody Boolean createNewResident_JSON(@RequestBody String newResidentJson, HttpSession session, ModelMap modelMap){
		System.out.println(newResidentJson);

		Gson gson = new Gson();
		Employee newEmployee = gson.fromJson(newResidentJson, Employee.class);
		boolean result = employeeService.updateEmployee(newEmployee);
		if (result) {
		//
		    String emailPreface = "";
	    	emailPreface = "New Employee Intake Email \n\n " + 
							"--------------------------------- \n\n" +
							"Generated by the RCS system from : \n\n" + 
							"Human Resources\n" +
							"--------------------------------- \n\n" +
							"This email concerns: " + newEmployee.getFirstName() + " " + newEmployee.getLastName() + "\n\n" + 
							"--------------------------------- \n\n" +
							"Here is your login Information:\n\n" +
							"Username: " + newEmployee.getUsername() + "\n" +
							"Password: " + newEmployee.getPassword() + "\n\n" +
							"--------------------------------- \n\n" + 
							"Please use the portal to change your password\n\n"; 
			String subject = "New Employee: " + newEmployee.getFirstName() + " " + newEmployee.getLastName() ;
		    //boolean result = sendEmail(employee, recipientEmail, header, body);
	    	result = sendEmail("ResidentCommunicationSystem@gmail.com", newEmployee.getEmail(), subject ,emailPreface);
		//
		}
		else {
			result = !result;
		}
		return result;
	}
	
	public boolean sendEmail(String fromEmail, String recipientEmail, String subject, String body){    
		Properties props = new Properties();
	    props.put("mail.smtp.host", "smtp.gmail.com");
	    props.put("mail.smtp.socketFactory.port", "465");
	    props.put("mail.smtp.socketFactory.class",
	            "javax.net.ssl.SSLSocketFactory");
	    props.put("mail.smtp.auth", "true");
	    props.put("mail.smtp.port", "805");

	    Session session = Session.getDefaultInstance(props,new javax.mail.Authenticator() {
	        @Override
	        protected PasswordAuthentication getPasswordAuthentication() {
	                return new PasswordAuthentication("ResidentCommunicationSystem@gmail.com","rcspassword");
	        }
	    });
	    try {

	        SMTPMessage message = new SMTPMessage(session);
	        message.setFrom(new InternetAddress("ResidentCommunicationSystem@gmail.com"));
	        message.setRecipients(Message.RecipientType.TO,
	                                 InternetAddress.parse(recipientEmail));

	        message.setSubject(subject);
	        message.setText(body);
	        message.setNotifyOptions(SMTPMessage.NOTIFY_SUCCESS);
	        int returnOption = message.getReturnOption();
	        System.out.println(returnOption);        
	        Transport.send(message);
	        System.out.println("sent");
	        return true;

	    }
	     catch (MessagingException e) {
	        return false;
	     }
	}

}
